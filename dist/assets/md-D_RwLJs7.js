import{b as o,o as u,w as a,g as e,ac as r,v as i,x as m,C as s}from"./modules/vue-DV80If2y.js";import{_ as c}from"./global-DA3am6OY.js";import{u as p,f as d}from"./slidev/context-r-p07su5.js";import"./index-CwhG9MRX.js";import"./modules/shiki-DMgTzxqj.js";const q={__name:"quarkus_first_app_performance_overview_siege.md__slidev_47",setup(f){const{$clicksContext:t,$frontmatter:l}=p();return t.setup(),(_,n)=>(u(),o(c,i(m(s(d)(s(l),46))),{default:a(()=>n[0]||(n[0]=[e("h1",null,[r("Test de performance "),e("strong",null,"response time"),r(" : quarkus-person")],-1),e("h2",null,"Outil de performance testing : Siege",-1),e("br",null,null,-1),e("ul",null,[e("li",null,[e("strong",null,"Transactions"),r(" : nombres de connexions au serveur")]),e("li",null,[e("strong",null,"Elapsed time"),r(" : durée de l’emsemble du test")]),e("li",null,[e("strong",null,"Data transferred"),r(" : taille des données transférées à chaque utilisateur")]),e("li",null,[e("strong",null,"Response time"),r(" : temps de réponse moyen du serveur pour chaque utilisateur")]),e("li",null,[e("strong",null,"Transaction rate"),r(" : nombre moyen de transactions que le serveur à réussi à gérer par seconde")]),e("li",null,[e("strong",null,"Throughput"),r(" : nombre moyen d’octets transférés chaque seconde par le serveur")]),e("li",null,[e("strong",null,"Concurrency"),r(" : nombre moyen de connexions simultanées ouvertes sur le serveur. Ce nombre augmente si les performances du serveur diminuent")]),e("li",null,[e("strong",null,"Successful transactions"),r(": nombre de transaction en succès")])],-1)])),_:1},16))}};export{q as default};
