import{b as r,o as s,w as i,g as e,ac as t,v as u,x as m,C as n}from"./modules/vue-DV80If2y.js";import{_ as c}from"./global_custom_ul_li_no_margin-CUCjX9Z_.js";import{u as p,f as d}from"./slidev/context-r-p07su5.js";import"./index-CwhG9MRX.js";import"./modules/shiki-DMgTzxqj.js";const T={__name:"graalvm_points_forts.md__slidev_16",setup(f){const{$clicksContext:o,$frontmatter:a}=p();return o.setup(),(g,l)=>(s(),r(c,u(m(n(d)(n(a),15))),{default:i(()=>l[0]||(l[0]=[e("h1",null,[e("strong",null,"GraalVM"),t(" : les points forts")],-1),e("ul",null,[e("li",null,[e("strong",null,"GraalVM Native Image est une technologie AOT (Ahead-Of-Time) qui génère des executables natifs."),t(" Cela "),e("strong",null,"améliore les performances d’executions des programmes java"),t(" tout en "),e("strong",null,"conservant la productivité"),t(".")])],-1),e("h2",null,"Fonctionnement traditionel d’une application Java",-1),e("br",null,null,-1),e("ul",null,[e("li",null,"Code Java est transformé en bytecode par la JVM"),e("li",null,[t("Le "),e("strong",null,"compilateur C1 du JIT"),t(" compile le bytecode en code natif au moment de l’execution de manière très rapide.")]),e("li",null,[t("Le "),e("strong",null,"compilateur C2 du JIT"),t(" améliore le code natif en se basant sur les informations de profilages (après un certain temps d’execution)")]),e("li",null,[e("strong",null,"Ce fonctionnement est couteux"),t(" : CPU, Mémoire pour les calculs de profilages")])],-1)])),_:1},16))}};export{T as default};
